<launch>
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find lyra_gz)/world/beerworld.world"/>
	</include>
	
	<!--Spawn the hand-on-wheels-->
	<!--TODO Change this to our custom model-->
	<param
		name="robot_description"
		command="
			$(find xacro)/xacro
			'$(find lyra_gz)/models/hand_on_aion.xacro'
			--inorder
		"
	/>
	<node
		name="spawn_model" pkg="gazebo_ros"
		type="spawn_model" output="screen"
		args="-param robot_description -urdf -model r1_sim"
	/>
	
	<!--Hand-on-wheels support elements from
	https://github.com/aionrobotics/aion_r1_gazebo/blob/master/launch/gazebo.launch
	-->
	<node
		name="tf_footprint_base" pkg="tf"
		type="static_transform_publisher"
		args="0 0 0 0 0 0 base_link base_footprint 40"
	/>
	<!--TODO What is the purpose of this?-->
	<node
		name="fake_joint_calibration"
		pkg="rostopic" type="rostopic"
		args="pub /calibrated std_msgs/Bool true"
	/>
	<node
		name="joint_state_publisher"
		pkg="joint_state_publisher"
		type="joint_state_publisher"
	/>
	<node
		name="robot_state_publisher"
		pkg="robot_state_publisher"
		type="robot_state_publisher"
	/>
	<node
		name="rviz" pkg="rviz" type="rviz"
    		args="-d $(find aion_r1_gazebo)/rviz/gazebo.rviz"
    	/>
    	
    	<!--Drone chassis control-->
    	<node
		name="keyboard_control" pkg="teleop_twist_keyboard"
		type="teleop_twist_keyboard.py" output="screen"
	>
		<remap from="/cmd_vel" to="/cmd_vel_mux/input/teleop"/>
	</node>
	
	<!--TODO Add arm controller configuration.-->
	<rosparam subst_value="true" command="load" ns="/arm">
# Publish all joint states -----------------------------------
joint_state_controller:
  type: joint_state_controller/JointStateController
  publish_rate: 40  

# Position Controllers ---------------------------------------
joint_traj_controller:
  type: position_controllers/JointTrajectoryController
  #These should always reflect the joint names given in cwru_davinci_geometry_models/model
  joints:
        - arm_joint
  pid_gains:
      arm_joint: {p: 1, i: 0, d: 0}
      state_publish_rate:  40
      action_monitor_rate: 40
  allow_partial_joints_goal: true
  constraints:
    goal_time: 10.0                   # Override default
    stopped_velocity_tolerance: 0.02 # Override default
</rosparam>


	<!-- load the controllers -->
	<node
		name="controller_spawner" 
		pkg="controller_manager"
		type="spawner"
		respawn="false"
		output="screen"
		ns="/arm"
		args="joint_traj_controller joint_state_controller"
	/>

	<node name="robot_state_publisher_arm" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
		<remap from="/joint_states" to="/arm/joint_states" />
	</node>
	

</launch>
